version: '3.8'

services:
  # For development purposes, we've simplified the setup by commenting out
  # the vault and orchestrator services and using direct file mounts for secrets
  # instead of Docker secrets
  
  # mcp-vault:
  #   image: vault:latest
  #   container_name: docgen-mcp-vault
  #   restart: unless-stopped
  #   volumes:
  #     - ./secrets:/vault/secrets:ro
  #     - mcp-vault-data:/vault/data
  #   environment:
  #     VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_TOKEN}
  #   cap_drop:
  #     - ALL
  #   cap_add:
  #     - NET_BIND_SERVICE
  #   networks:
  #     - mcp-backend
  #   healthcheck:
  #     test: ["CMD", "vault", "status"]
  #     interval: 30s
  #     timeout: 5s
  #     retries: 3
      
  mcp-github:
    build:
      context: ./servers/github
      dockerfile: Dockerfile
    container_name: docgen-mcp-github
    restart: unless-stopped
    ports:
      - "${GITHUB_MCP_PORT_RANGE:-3000-3100}:3000"
    volumes:
      - ../../:/workspace:ro
      - mcp-github-data:/app/data
      - ../secrets/github_token.txt:/run/secrets/github_token:ro
    env_file:
      - ./.env.mcp
    networks:
      - mcp-frontend
      - mcp-backend
    deploy:
      resources:
        limits:
          cpus: '${MCP_CPU_LIMIT:-0.5}'
          memory: '${MCP_MEMORY_LIMIT:-1g}'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      
  mcp-main:
    build:
      context: ./servers/main
      dockerfile: Dockerfile
    container_name: docgen-mcp-main
    restart: unless-stopped
    ports:
      - "${MAIN_MCP_PORT_RANGE:-3200-3300}:3200"
      - "${MAIN_MCP_HEALTH_PORT_RANGE:-8800-8900}:8800"
    volumes:
      - ../../:/workspace:ro
      - mcp-main-data:/app/data
      - ../secrets/anthropic_key.txt:/run/secrets/anthropic_key:ro
      - ../secrets/mcp_api_keys.txt:/run/secrets/mcp_api_keys:ro
    env_file:
      - ./.env.mcp
    networks:
      - mcp-frontend
      - mcp-backend
    deploy:
      resources:
        limits:
          cpus: '${MCP_CPU_LIMIT:-1.0}'
          memory: '${MCP_MEMORY_LIMIT:-2g}'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8800/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  mcp-orchestrator:
    build:
      context: ./servers/orchestrator
      dockerfile: Dockerfile
    container_name: docgen-mcp-orchestrator
    restart: unless-stopped
    ports:
      - "${ORCHESTRATOR_PORT_RANGE:-8080-8180}:8080"
    volumes:
      - ./config:/etc/mcp:ro
      - ../secrets/mcp_api_keys.txt:/run/secrets/mcp_api_keys:ro
    env_file:
      - ./.env.mcp
    environment:
      - GITHUB_MCP_URL=http://mcp-github:3000
      - MAIN_MCP_URL=http://mcp-main:3200
    networks:
      - mcp-frontend
      - mcp-backend
    depends_on:
      - mcp-github
      - mcp-main
    deploy:
      resources:
        limits:
          cpus: '${MCP_CPU_LIMIT:-0.5}'
          memory: '${MCP_MEMORY_LIMIT:-1g}'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  mcp-frontend:
    driver: bridge
  mcp-backend:
    driver: bridge

volumes:
  # mcp-vault-data:
  mcp-github-data:
  mcp-main-data:

# Using direct file mounts instead of Docker secrets for development simplicity
# secrets:
#   github_api_token:
#     file: ./secrets/github_token.txt
#   anthropic_api_key:
#     file: ./secrets/anthropic_key.txt
#   codeium_api_key:
#     file: ./secrets/codeium_key.txt

# configs:
#   mcp-routing:
#     file: ./config/routing.yaml
