version: '3.9'

networks:
  mcp_gateway:
    driver: bridge
  mcp_internal:
    driver: bridge
    internal: true

services:
  mcp_gateway:
    image: nginx:alpine
    container_name: mcp_gateway
    restart: unless-stopped
    ports:
      - "${MCP_GATEWAY_PORT:-8950}:80"
    volumes:
      - ./.docker/mcp/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.docker/mcp/config/gateway.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - mcp_gateway
      - mcp_internal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    environment:
      - NGINX_ENVSUBST_TEMPLATE_DIR=/etc/nginx/templates
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/conf.d
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Template for MCP Server instances
  # This will be duplicated for each model server
  mcp_server:
    image: ${MCP_SERVER_IMAGE:-docgen/mcp-server:latest}
    restart: unless-stopped
    volumes:
      - ./.docker/mcp/config:/app/config:ro
      - ${MCP_MODEL_CACHE_DIR:-./models}:/app/models:ro
    networks:
      - mcp_internal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MCP_SERVER_PORT:-3000}/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '${MCP_SERVER_CPU_LIMIT:-1.0}'
          memory: ${MCP_SERVER_MEMORY_LIMIT:-4G}
    environment:
      - MCP_SERVER_PORT=${MCP_SERVER_PORT:-3000}
      - MCP_MODEL_PATH=${MCP_MODEL_PATH:-/app/models}
      - MCP_LOG_LEVEL=${MCP_LOG_LEVEL:-info}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # This is a template service, not meant to be started directly
    profiles: 
      - donotstart
