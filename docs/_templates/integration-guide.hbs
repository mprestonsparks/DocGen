---
title: "Documentation Integration Guide"
schemaVersion: "1.1.0"
version: "1.0.0"
status: "DRAFT"
date: "{{lastUpdated}}"
author: "DocGen"
---

# Documentation Integration Guide for {{projectName}}

## Introduction

This guide provides instructions for integrating the documentation generated by DocGen into your existing project documentation. DocGen has analyzed your project and created structured documentation according to industry standards.

## Generated Documentation

The following documents have been generated:

{{#each documents}}
- **{{this.title}}** - {{this.path}}
  - Purpose: {{this.purpose}}
  - Format: {{this.format}}
{{/each}}

## Integration Recommendations

### Option 1: Maintain Separate Documentation

Benefits:
- Non-destructive: keeps your existing documentation intact
- Clear separation between existing and generated docs
- Easy to update either set independently

Approach:
1. Keep the generated documentation in its current location ({{outputDirectory}})
2. Add a reference in your main README.md to the generated documentation

Example README addition:
```markdown
## Project Documentation

In addition to this README, comprehensive documentation is available in the [{{outputDirectory}}](./{{outputDirectory}}) directory, including:
{{#each documents}}
- [{{this.title}}](./{{this.path}})
{{/each}}
```

### Option 2: Selective Integration

Benefits:
- Combines the best of both worlds
- Maintains your existing documentation structure
- Enhances areas where documentation was lacking

Approach:
1. Review each generated document and compare with existing documentation
2. For each document, decide whether to:
   - Keep the existing version
   - Replace with the generated version
   - Merge content from both versions

## Schema Compliance

The generated documentation follows a structured schema with these key elements:
- YAML frontmatter with metadata
- Consistent heading structure
- JSON blocks for machine-readable content
- Cross-references between documents

If you plan to update the documentation in the future, maintaining this structure will ensure compatibility with DocGen's validation and update features.

## Key Documents and Their Purpose

{{#each documents}}
### {{this.title}}

**Location:** {{this.path}}
**Purpose:** {{this.purpose}}

Key sections:
{{#each this.sections}}
- {{this.heading}}: {{this.description}}
{{/each}}

{{/each}}

## Version Control Recommendations

We recommend the following approach for version controlling your documentation:

1. If using Git, commit the generated documentation as a separate commit with a clear message
2. Consider using a separate branch if you're planning significant documentation changes
3. Document the DocGen version used to generate the documentation in your commit message

## Next Steps

1. Review the generated documentation for accuracy
2. Decide on your preferred integration approach
3. Update your main README with references to the new documentation
4. Commit the changes to your version control system