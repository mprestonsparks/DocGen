name: Documentation CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/**/*.md'
      - 'scripts/**/*.js'
      - 'scripts/**/*.ts'
      - 'src/**/*.ts'
      - 'test/**/*.js'
      - 'test/**/*.ts'
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests with coverage
        run: npm test -- --coverage
      
      - name: Run linting
        run: npm run lint
        
      - name: Generate Coverage Badge
        id: coverage_badge
        run: |
          COVERAGE=$(node -e "const fs=require('fs'); \
            const report=JSON.parse(fs.readFileSync('./coverage/coverage-final.json')); \
            const coverage=Object.values(report).reduce((acc, file) => { \
              return acc + file.covered / (file.covered + file.missed); \
            }, 0) / Object.keys(report).length * 100; \
            console.log(Math.round(coverage))")
          
          mkdir -p .github/badges
          
          # Determine badge color based on coverage
          if [ "$COVERAGE" -ge 90 ]; then
            COLOR="success"
          elif [ "$COVERAGE" -ge 80 ]; then
            COLOR="yellowgreen"
          elif [ "$COVERAGE" -ge 70 ]; then
            COLOR="yellow"
          elif [ "$COVERAGE" -ge 60 ]; then
            COLOR="orange"
          else
            COLOR="critical"
          fi
          
          # Generate coverage badge
          echo "{\"schemaVersion\":1,\"label\":\"coverage\",\"message\":\"$COVERAGE%\",\"color\":\"$COLOR\"}" > .github/badges/coverage.json
          echo "::set-output name=coverage::$COVERAGE"
      
      # This will be used to commit the badge to the repository
      - name: Commit and push coverage badge
        if: github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .github/badges
          git commit -m "Update test coverage badge" || exit 0
          git push

  validate:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Validate documentation
        run: npm run validate
      
      - name: Generate reports
        run: npm run generate-reports
      
      - name: Archive documentation reports
        uses: actions/upload-artifact@v3
        with:
          name: documentation-reports
          path: docs/reports/